import Head from 'next/head'
import { useAppDispatch } from '@/app/hooks'
import Form from '@/components/Form'
import { useEffect } from 'react'
import { Question, questionActions } from '@/app/features/questionsSlice'
import { RootState } from '@/app/store'
import { studentActions } from '@/app/features/studentSlice'

function Home() {
  const dispatch = useAppDispatch()

  const setQuestionsToStore = async (): Promise<string> => {
    const jsonStore: string | null = localStorage.getItem('state')
    if (jsonStore === null) {
      const questions = await fetchQuestions()
      dispatch(questionActions.setQuestions(questions))
      return 'questions have fetched'
    } else {
      const jsonStore: string = localStorage.getItem('state') || '{}'
      const store:RootState = JSON.parse(jsonStore)
      dispatch(questionActions.setQuestions(store.questions.data))
      dispatch(studentActions.setEmail(store.student.email))
      return 'use cached questions'
    }
  }

  useEffect(() => {
    setQuestionsToStore().then((str) => console.log(str))
  }, [])

  return (
    <>
      <Head>
        <title>quiz</title>
        <meta name='description' content='Generated by create next app'/>
        <meta name='viewport' content='width=device-width, initial-scale=1'/>
      </Head>
      <main className='md:container md:mx-auto'>
        <Form/>
      </main>
    </>
  )
}

export default Home

async function fetchQuestions(): Promise<Question[]> {
  const response = await fetch('/api/questions')
  if (response.ok) {
    return await response.json()
  }
  return []
}